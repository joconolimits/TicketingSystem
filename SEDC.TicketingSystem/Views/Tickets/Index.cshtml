@model IEnumerable<SEDC.TicketingSystem.Models.Ticket>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
                      <div class="box1 text-center">
                          <br />
                          <h4 class="colorletter text-center">My Tickets</h4>
                          <br />
                      </div>
    <br />
<div class="wraperHome shadow4">
    <div class="container-fluid wraperHome1">
        <div class="position-center">
            <span class="msgText">Order By: </span>
            <select id="filterBy" name="filterBy">
                <option value="1">Status</option>
                <option value="2">Open Date</option>
                <option value="3">Title</option>
                <option value="4">Worked Hours</option>
            </select>
            <span class="msgText">Ordering: </span>
            <select id="ordering" name="ordering">
                <option value="1">Acending</option>
                <option value="2">Decending</option>
            </select>
            <p class="btn loginbtn">
                @Html.ActionLink("Create New", "Create", null, new { @class = "colorwhite" })
            </p>
        </div>
    </div>
</div>
    <br />
@* This div is needed for the ordering filters and the ajax to work *@
<div id="tickets" class="container-fluid">
    <table class="table table-moderator">
        <tr class="msgText">
            @* We don't need to show the moderator and owner of the ticket in the list *@
            @*<th>
                @Html.DisplayNameFor(model => model.Moderator.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Owner.Name)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.ID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OpenDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CloseDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.WorkHours)
            </th>
            <th></th>
        </tr>
        @foreach (var item in Model)
        { 
            string status ="";
            if((int)item.Status == 1) { 
                status ="danger";
            }
             if((int)item.Status == 2) {
                status ="info";
                }
             if ((int)item.Status == 3)
             {
                 status = "success";
             }
            <tr class="@status">
                @* We don't need to show the moderator and owner of the ticket in the list *@
                @*<td>
                    @Html.DisplayFor(modelItem => item.Moderator.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Owner.Name)
                </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.ID)
                </td>
                <td>
                    @* This line will show the title of the ticket as link to the ticket details *@
                    @Html.ActionLink(item.Title.ToString(), "Details", new { id = item.ID })
                        
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OpenDate)
                </td>
                <td>
                        @Html.DisplayFor(modelItem => item.CloseDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.WorkHours)
                </td>
                <td>

                    @if ((int)item.Status == 3)
                    {
                        <span>Edit |</span>
                        @Html.ActionLink("Delete", "Delete", new { id = item.ID })

                    }
                    else
                    {
                        @Html.ActionLink("Edit", "Edit", new { id = item.ID }) 
                        <span>|</span>
                        @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                    }

                </td>
            </tr>
        }
    </table>
</div>
<div class="make-room"></div>
@section OrderByScript{<script src="~/Scripts/userOrderBy.js"></script>}
