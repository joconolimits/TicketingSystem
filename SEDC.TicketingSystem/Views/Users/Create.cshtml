@model SEDC.TicketingSystem.Models.User

@{
    ViewBag.Title = "Create";
     if (Convert.ToInt32(Session["IsAdmin"]) == 2)
    {
        Layout = "~/Views/Shared/_SuperAdminLayout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_LayoutPage.cshtml";        
    }
}

<div class="container-fluid wraperHome">
    <div class="shadow1">
        <div class="panel-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                      <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label colorletter col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label colorletter col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label colorletter col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label colorletter col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label colorletter col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*If the Super admin is  asking for this view show him the IsAdmin filed*@
                        @if (Convert.ToInt32(Session["IsAdmin"]) == 2)
                        {
                         <div class="form-group">
                            @Html.LabelFor(model => model.IsAdmin, htmlAttributes: new { @class = "control-label colorletter col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EnumDropDownListFor(model => model.IsAdmin, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.IsAdmin, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        }
                        

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn loginbtn" />
                            </div>
                        </div>
                    </div>
                }
        </div>
    </div>
</div>

