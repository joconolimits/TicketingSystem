@model SEDC.TicketingSystem.Models.User

@{
    ViewBag.Title = "Edit";
    // Check which layot to use for the view according tho the User ACL  that request it
    if (Convert.ToInt32(Session["IsAdmin"]) == 2)
    {
        Layout = "~/Views/Shared/_SuperAdminLayout.cshtml";
    }
    else
        if (Convert.ToInt32(Session["IsAdmin"]) == 1)
        {
            Layout = "~/Views/Shared/_ModeratorLayout.cshtml";
        }
        else
        {
            Layout = "~/Views/Shared/_LayoutPage.cshtml";
        }
}
<div class="container-fluid wraperHome">

    <div class="shadow2 blue-line">
        <h3 class="colorletter">Edit Profile</h3>
        <hr />
        <div class="edit-center">
            <div class="centering"></div>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal msgTextNoMrg">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ID)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, "Confirm Password", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            <input class="form-control" id="confirmPassword" name="confirmPassword" type="password"/>
                        </div>
                    </div>

                    @*If the Super admin is  asking for this view show him the IsAdmin filed*@
                    @if (Convert.ToInt32(Session["IsAdmin"]) == 2)
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.IsAdmin, htmlAttributes: new { @class = "control-label colorletter col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EnumDropDownListFor(model => model.IsAdmin, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.IsAdmin, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    }

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-9">
                            <input type="submit" value="Save" class="btn loginbtn" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
@section passwordValidation{
    <script src="http://jqueryvalidation.org/files/dist/jquery.validate.min.js"></script>
    <script src="http://jqueryvalidation.org/files/dist/additional-methods.min.js"></script>
    <script src="~/Scripts/passwordValidation.js"></script>
}
